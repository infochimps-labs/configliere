h2. Version 0.4.0 2011-05-13

Bumping version number as there are a few breaking changes -- should only affect the careless and finicky, but please check before you pull.

* Configliere now unambiguously wants symbols to define params.
* Configliere no longer modifies any core classes:
  - deep_merge, deep_set and deep_delete have been moved to a DeepHash class.
  - the Sash class is gone. More on this below.
  - blank? is not defined by default
* :encrypted keys are now stored as base64-encoded
  
* Stripped out some magic: :no_help and :no_env_help (the convention is @:internal@); Settings.argv; Settings.commands?
* Removed the long-deprecated :git_style_binaries synonym for :commands


h2. Version 0.3.4

The jump in minor version number was unintentional

* handle case wehre file is empty on environment merge
* read returns self, so can chain

h2. Version 0.2.3

* Added a feature to load only production/development/etc subhash from a config file, so:

  Settings.read(root_path('config/foo.yaml'), :env => ENV['RACK_ENV'])

h2. Version 0.2.1 2011-01-28

* Missing required params include their definition in error message
* finally{} blocks don't supply a parameter any more -- use self instead.

h2. Version 0.1.1 2010-08-17

* Settings.read now does expand_path on the file path

h2. Version 0.1.0 2010-07-24

* Version 0.1 !!!
* Single-letter option flags
* Can give a ':finally' proc (or hand a block to) Settings.define. Example:

<pre><code>  
    Settings.define :key_pair_file,        :description => 'AWS Key pair file', :finally => lambda{ Settings.key_pair_file = File.expand_path(Settings.key_pair_file.to_s) if Settings.key_pair_file }
    Settings.define :key_pair,             :description => "AWS Key pair name. If not specified, it's taken from key_pair_file's basename", :finally => lambda{ Settings.key_pair ||= File.basename(Settings.key_pair_file.to_s, '.pem') if Settings.key_pair_file }
</code></pre>  

h2. Version 0.0.8 2010-05-02

* Provisional implementation of git-style binaries (foo-ls and foo-chmod and so on)
* Minor fixes

h2. Version 0.0.6 2010-04-05

* configliere/define and configliere/config_file are included by default.
* fixed a bug when ENV['HOME'] is missing (running as root)

h2. Version 0.0.5 2010-01-27

Configliere.use will load all gems by default

h2. Version 0.0.4 2010-01-16

* Cured a variety of issues noted by "@monad":http://github.com/monad -- thanks for the feedback!

h2. Version 0.0.3 2010-01-15

* @Settings.param@ now only works for params that have been @#define@'d :
<pre>
    Settings :no_yuo => 'oops'
    Settings.no_yuo
    #=> NoMethodError: undefined method `no_yuo' for {:no_yuo=>"oops"}:Configliere::Param
    Settings.define :happy_param, :default => 'yay'
    Settings.happy_param
    #=> "yay" 
</pre>

* Note that you *must* use symbols as keys (except for dotted notation for deep keys). See the README.
* You must now define environment variables using @Settings.env_vars :param => 'ENV_VAR'@. The order was switched to consistently use param as the key. Also, @environment@ was renamed to @env_var@ to avoid confusion with the "development/test/production" convention from rails and friends.
* die takes an error code as option
* Added example scripts for encrypted and config_block scripts
* The directory path to a config_file will now be created automatically
